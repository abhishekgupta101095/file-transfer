# Copyright Â© 2024 Accenture. All rights reserved.

# File: re_dimension_dv360.py
# Author: abhishek.cw.gupta
# Date: 28-May-2024
# Description: Populate re_dimensions with DV360 data.

# import pandas as pd
# import numpy as np
# import Helper
# import dbConfig as db
# import config as config
# from get_data_load_metadata_uuid import get_last_data_load_metadata_uuid

import scripts.Helper as Helper
import scripts.dbConfig as db
import scripts.config as config
from scripts.get_data_load_metadata_uuid import get_last_data_load_metadata_uuid

# Database connection parameters
postgresPort = db.postgresPort
postgresHost = db.postgresHost
postgresDB = db.postgresDB
postgresUser = db.postgresUser
postgresPassword = db.postgresPassword

re_dimensions_table_name = config.re_dimensions_table_name
domains_table_name = config.domains_table_name

connection_string = f'postgresql://{postgresUser}:{postgresPassword}@{postgresHost}:{postgresPort}/{postgresDB}'

def populate_re_dimensions():

    # Fetch the dataset
    re_dimensions = Helper.select_table_data(re_dimensions_table_name, cols=[], connection_string=connection_string)
    domains = Helper.select_table_data(domains_table_name, cols=[], connection_string=connection_string)
    re_dimensions['id']= [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
    re_dimensions['name']= ['data_date','data_source','campaign','channel','audience','creative','device','impressions','revenue','spend','conversions','clicks','viewable_impressions','views','completed_views','ingestiontime']
    re_dimensions['is_metric']= [False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True]
    re_dimensions['is_dimension']= [True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False]
    re_dimensions['description']= ['date identifier for day for which data is reported','platform from which data is reported','Retrieving data. Wait a few seconds and try to cut or copy again.','marketing channel on which the campaign is live eg. Display, Video, Audio etc.','decsription of target population for the campaign','desciption of the content which the target population will be receiving as part of campaign','device on which the marketing content will be published','no. of times the conent was shown to user','revenue generated by marketing activity','cost associated with marketing activity','conversions attributed to marketing activity','no. of clicks the creative recieved','no. of impressions which are considered viewable','no. of videos views irrespective of completion rate','no. of videos views with 100% completion','CREATED DATE']
    re_dimensions['can_be_aggregated']= [False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False]
    re_dimensions['data_type']= ['DATE','STRING','STRING','STRING','STRING','STRING','STRING','INTEGER','FLOAT','FLOAT','FLOAT','INTEGER','INTEGER','FLOAT','FLOAT','TIMESTAMP']
    re_dimensions.loc[re_dimensions['name']=='ingestion_time','default_values']='currentimestamp'
    re_dimensions['is_geography_dependent']=False
    re_dimensions['vendor']= 'Google'    
    re_dimensions['category']= 'DV360'
    re_dimensions['domain_id'] = domains[domains['domain_name'].str.contains('Media')]['domain_id'][0]

    Helper.write_dataframe_to_postgresql_in_chunks(re_dimensions, re_dimensions_table_name, chunksize=10000, connection_string=connection_string)

if __name__ == '__main__':
   populate_re_dimensions()
